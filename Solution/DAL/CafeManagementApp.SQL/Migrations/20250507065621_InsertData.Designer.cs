// <auto-generated />
using System;
using CafeManagementApp.SQL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeManagementApp.SQL.Migrations
{
    [DbContext(typeof(CafeManagementDBContext))]
    [Migration("20250507065621_InsertData")]
    partial class InsertData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CafeManagementApp.SQL.Model.Cafe", b =>
                {
                    b.Property<Guid>("CafeGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CafeGuid");

                    b.ToTable("Cafes");
                });

            modelBuilder.Entity("CafeManagementApp.SQL.Model.CafeEmployee", b =>
                {
                    b.Property<long>("CafeEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CafeEmployeeId"));

                    b.Property<Guid>("CafeGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("CafeEmployeeId");

                    b.HasIndex("CafeGuid");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CafeEmployees");
                });

            modelBuilder.Entity("CafeManagementApp.SQL.Model.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmployeeId"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeIdString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CafeManagementApp.SQL.Model.CafeEmployee", b =>
                {
                    b.HasOne("CafeManagementApp.SQL.Model.Cafe", "Cafe")
                        .WithMany("CafeEmployees")
                        .HasForeignKey("CafeGuid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CafeManagementApp.SQL.Model.Employee", "Employee")
                        .WithMany("CafeEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cafe");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CafeManagementApp.SQL.Model.Cafe", b =>
                {
                    b.Navigation("CafeEmployees");
                });

            modelBuilder.Entity("CafeManagementApp.SQL.Model.Employee", b =>
                {
                    b.Navigation("CafeEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
